#!/usr/bin/python

import os
import Image
import imghdr
import argparse
import itertools

DATE_TIME_ORIGINAL_TAG = 0x9003

def get_date_time_original(file_name):
    i = Image.open(file_name)
    info = i._getexif()
    return info[DATE_TIME_ORIGINAL_TAG]

def list_files(path, recursive):
    files = []
    for dirpath, dirs, filenames in os.walk(path):
        for f in filenames:
            full = os.path.join(dirpath, f)
            files.append(full)
        if not recursive:
            for d in dirs: dirs.pop()
    return files

def filter_images(files):
    return [f for f in files if is_image(f)]

def is_image(f):
    return os.path.isfile(f) and imghdr.what(f) in ['jpeg', 'gif', 'png']

def get_new_name(file_path):
    _, ext = os.path.splitext(file_path)
    ext = ext.lower()
    directory, _ = os.path.split(file_path)
    t = get_date_time_original(file_path)
    new_name = t.replace(' ', '_').replace(':', '.')
    for n in itertools.count():
        f = os.path.join(directory, "%s.%d%s" % (new_name, n, ext))
        if not os.path.exists(f):
            break
    return f

def extract_names(files):
    return [get_new_name(f) for f in files]

def rename_all(old_names, new_names):
    for old, new in zip(old_names, new_names):
        if old == new:
            continue
        if os.path.exists(new):
            print "WARN: could not rename '%s' to '%s' (already exists)" % (old, new)
        else:
            print '--', old
            print '++', new
            os.rename(old, new)

if __name__=='__main__':
    parser = argparse.ArgumentParser(description='Rename image files based on the EXIF OriginalTime field.')
    parser.add_argument('-r', '--recursive', help='rename subdirectories recursively', action='store_true')
    parser.add_argument('-d', '--directory', help='directory of files to rename (defaults to .)', default='.')
    args = parser.parse_args()

    files = list_files(args.directory, args.recursive)
    files = filter_images(files)
    files = map(os.path.abspath, files)
    new_names = extract_names(files)
    rename_all(files, new_names)


#!/usr/bin/python

import os
import Image
import imghdr
import argparse

DATE_TIME_ORIGINAL_TAG = 0x9003

def get_date_time_original(file_name):
    i = Image.open(file_name)
    info = i._getexif()
    return info[DATE_TIME_ORIGINAL_TAG]

def list_files(path, recursive):
    files = []
    for dirpath, dirs, filenames in os.walk(path):
        for f in filenames:
            full = os.path.join(dirpath, f)
            files.append(full)
        if not recursive:
            for d in dirs: dirs.pop()
    return files

def list_image_files(path, recursive):
    files = [f for f in list_files(path, recursive) if is_image(f)]
    files = map(os.path.abspath, files)
    return files

def is_image(f):
    return os.path.isfile(f) and imghdr.what(f) in ['jpeg', 'gif', 'png']

def get_new_name(file_path):
    _, ext = os.path.splitext(file_path)
    directory, _ = os.path.split(file_path)
    t = get_date_time_original(file_path)
    new_name = os.path.join(directory, t.replace(' ', '_').replace(':', '.'))
    return new_name + ext.lower()

def get_postfix(path):
    n = 0
    while os.path.exists(path+'.'+str(n)): 
        n +=1
    return str(n)
    
def rename(files):
    for old_path in files:
        new_path = get_new_name(old_path)
        if old_path == new_path: 
            continue
        if os.path.exists(new_path):
            print "WARN: could not rename '%s' to '%s' (already exists)" % (old_path, new_path)
        else:
            print '-', old_path
            print '+', new_path
#            os.rename(old_path, new_path)

if __name__=='__main__':
    parser = argparse.ArgumentParser(description='Rename image files based on the EXIF OriginalTime field.')
    parser.add_argument('-r', '--recursive', help='rename subdirectories recursively', action='store_true')
    parser.add_argument('-d', '--directory', help='directory of files to rename (defaults to .)', default='.')
    args = parser.parse_args()

    files = list_image_files(args.directory, args.recursive)
    rename(files)

